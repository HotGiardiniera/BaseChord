// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fs.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Internal representations for operations.
type Op int32

const (
	Op_GET    Op = 0
	Op_STORE  Op = 1
	Op_DELETE Op = 2
)

var Op_name = map[int32]string{
	0: "GET",
	1: "STORE",
	2: "DELETE",
}

var Op_value = map[string]int32{
	"GET":    0,
	"STORE":  1,
	"DELETE": 2,
}

func (x Op) String() string {
	return proto.EnumName(Op_name, int32(x))
}

func (Op) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{0}
}

// Represents value of data object that client wants to retrieve / store
type Data struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{0}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// Represents name-value of data object that client wants to store
type FileStore struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data                 *Data    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileStore) Reset()         { *m = FileStore{} }
func (m *FileStore) String() string { return proto.CompactTextString(m) }
func (*FileStore) ProtoMessage()    {}
func (*FileStore) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{1}
}

func (m *FileStore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileStore.Unmarshal(m, b)
}
func (m *FileStore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileStore.Marshal(b, m, deterministic)
}
func (m *FileStore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileStore.Merge(m, src)
}
func (m *FileStore) XXX_Size() int {
	return xxx_messageInfo_FileStore.Size(m)
}
func (m *FileStore) XXX_DiscardUnknown() {
	xxx_messageInfo_FileStore.DiscardUnknown(m)
}

var xxx_messageInfo_FileStore proto.InternalMessageInfo

func (m *FileStore) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileStore) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// Represents name of data object that client wants to retrieve
type FileGet struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileGet) Reset()         { *m = FileGet{} }
func (m *FileGet) String() string { return proto.CompactTextString(m) }
func (*FileGet) ProtoMessage()    {}
func (*FileGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{2}
}

func (m *FileGet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileGet.Unmarshal(m, b)
}
func (m *FileGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileGet.Marshal(b, m, deterministic)
}
func (m *FileGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileGet.Merge(m, src)
}
func (m *FileGet) XXX_Size() int {
	return xxx_messageInfo_FileGet.Size(m)
}
func (m *FileGet) XXX_DiscardUnknown() {
	xxx_messageInfo_FileGet.DiscardUnknown(m)
}

var xxx_messageInfo_FileGet proto.InternalMessageInfo

func (m *FileGet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Represents name of data object that client wants to delete
type FileDelete struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileDelete) Reset()         { *m = FileDelete{} }
func (m *FileDelete) String() string { return proto.CompactTextString(m) }
func (*FileDelete) ProtoMessage()    {}
func (*FileDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{3}
}

func (m *FileDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileDelete.Unmarshal(m, b)
}
func (m *FileDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileDelete.Marshal(b, m, deterministic)
}
func (m *FileDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileDelete.Merge(m, src)
}
func (m *FileDelete) XXX_Size() int {
	return xxx_messageInfo_FileDelete.Size(m)
}
func (m *FileDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_FileDelete.DiscardUnknown(m)
}

var xxx_messageInfo_FileDelete proto.InternalMessageInfo

func (m *FileDelete) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Represent a void message indicating success of file storage
type Success struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Success) Reset()         { *m = Success{} }
func (m *Success) String() string { return proto.CompactTextString(m) }
func (*Success) ProtoMessage()    {}
func (*Success) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{4}
}

func (m *Success) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Success.Unmarshal(m, b)
}
func (m *Success) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Success.Marshal(b, m, deterministic)
}
func (m *Success) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Success.Merge(m, src)
}
func (m *Success) XXX_Size() int {
	return xxx_messageInfo_Success.Size(m)
}
func (m *Success) XXX_DiscardUnknown() {
	xxx_messageInfo_Success.DiscardUnknown(m)
}

var xxx_messageInfo_Success proto.InternalMessageInfo

// Represent a void message indicating file not being located
type FileNotFound struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileNotFound) Reset()         { *m = FileNotFound{} }
func (m *FileNotFound) String() string { return proto.CompactTextString(m) }
func (*FileNotFound) ProtoMessage()    {}
func (*FileNotFound) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{5}
}

func (m *FileNotFound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileNotFound.Unmarshal(m, b)
}
func (m *FileNotFound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileNotFound.Marshal(b, m, deterministic)
}
func (m *FileNotFound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileNotFound.Merge(m, src)
}
func (m *FileNotFound) XXX_Size() int {
	return xxx_messageInfo_FileNotFound.Size(m)
}
func (m *FileNotFound) XXX_DiscardUnknown() {
	xxx_messageInfo_FileNotFound.DiscardUnknown(m)
}

var xxx_messageInfo_FileNotFound proto.InternalMessageInfo

// Represents an error.
type Error struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{6}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// If an file is on a different server
type Redirect struct {
	Server               string   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Redirect) Reset()         { *m = Redirect{} }
func (m *Redirect) String() string { return proto.CompactTextString(m) }
func (*Redirect) ProtoMessage()    {}
func (*Redirect) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{7}
}

func (m *Redirect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Redirect.Unmarshal(m, b)
}
func (m *Redirect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Redirect.Marshal(b, m, deterministic)
}
func (m *Redirect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Redirect.Merge(m, src)
}
func (m *Redirect) XXX_Size() int {
	return xxx_messageInfo_Redirect.Size(m)
}
func (m *Redirect) XXX_DiscardUnknown() {
	xxx_messageInfo_Redirect.DiscardUnknown(m)
}

var xxx_messageInfo_Redirect proto.InternalMessageInfo

func (m *Redirect) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

// Represents an operation result.
type Result struct {
	// Types that are valid to be assigned to Result:
	//	*Result_Data
	//	*Result_Success
	//	*Result_NotFound
	//	*Result_Redirect
	Result               isResult_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{8}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

type isResult_Result interface {
	isResult_Result()
}

type Result_Data struct {
	Data *Data `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type Result_Success struct {
	Success *Success `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

type Result_NotFound struct {
	NotFound *FileNotFound `protobuf:"bytes,3,opt,name=notFound,proto3,oneof"`
}

type Result_Redirect struct {
	Redirect *Redirect `protobuf:"bytes,4,opt,name=redirect,proto3,oneof"`
}

func (*Result_Data) isResult_Result() {}

func (*Result_Success) isResult_Result() {}

func (*Result_NotFound) isResult_Result() {}

func (*Result_Redirect) isResult_Result() {}

func (m *Result) GetResult() isResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Result) GetData() *Data {
	if x, ok := m.GetResult().(*Result_Data); ok {
		return x.Data
	}
	return nil
}

func (m *Result) GetSuccess() *Success {
	if x, ok := m.GetResult().(*Result_Success); ok {
		return x.Success
	}
	return nil
}

func (m *Result) GetNotFound() *FileNotFound {
	if x, ok := m.GetResult().(*Result_NotFound); ok {
		return x.NotFound
	}
	return nil
}

func (m *Result) GetRedirect() *Redirect {
	if x, ok := m.GetResult().(*Result_Redirect); ok {
		return x.Redirect
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Result) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Result_OneofMarshaler, _Result_OneofUnmarshaler, _Result_OneofSizer, []interface{}{
		(*Result_Data)(nil),
		(*Result_Success)(nil),
		(*Result_NotFound)(nil),
		(*Result_Redirect)(nil),
	}
}

func _Result_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Result)
	// result
	switch x := m.Result.(type) {
	case *Result_Data:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Data); err != nil {
			return err
		}
	case *Result_Success:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Success); err != nil {
			return err
		}
	case *Result_NotFound:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NotFound); err != nil {
			return err
		}
	case *Result_Redirect:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Redirect); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Result.Result has unexpected type %T", x)
	}
	return nil
}

func _Result_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Result)
	switch tag {
	case 1: // result.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Data)
		err := b.DecodeMessage(msg)
		m.Result = &Result_Data{msg}
		return true, err
	case 2: // result.success
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Success)
		err := b.DecodeMessage(msg)
		m.Result = &Result_Success{msg}
		return true, err
	case 3: // result.notFound
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileNotFound)
		err := b.DecodeMessage(msg)
		m.Result = &Result_NotFound{msg}
		return true, err
	case 4: // result.redirect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Redirect)
		err := b.DecodeMessage(msg)
		m.Result = &Result_Redirect{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Result_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Result)
	// result
	switch x := m.Result.(type) {
	case *Result_Data:
		s := proto.Size(x.Data)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Result_Success:
		s := proto.Size(x.Success)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Result_NotFound:
		s := proto.Size(x.NotFound)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Result_Redirect:
		s := proto.Size(x.Redirect)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A type for arguments across all operations
type Command struct {
	Operation Op `protobuf:"varint,1,opt,name=operation,proto3,enum=pb.Op" json:"operation,omitempty"`
	// Types that are valid to be assigned to Arg:
	//	*Command_Get
	//	*Command_Store
	//	*Command_Delete
	Arg                  isCommand_Arg `protobuf_oneof:"arg"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{9}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetOperation() Op {
	if m != nil {
		return m.Operation
	}
	return Op_GET
}

type isCommand_Arg interface {
	isCommand_Arg()
}

type Command_Get struct {
	Get *FileGet `protobuf:"bytes,2,opt,name=get,proto3,oneof"`
}

type Command_Store struct {
	Store *FileStore `protobuf:"bytes,3,opt,name=store,proto3,oneof"`
}

type Command_Delete struct {
	Delete *FileDelete `protobuf:"bytes,4,opt,name=delete,proto3,oneof"`
}

func (*Command_Get) isCommand_Arg() {}

func (*Command_Store) isCommand_Arg() {}

func (*Command_Delete) isCommand_Arg() {}

func (m *Command) GetArg() isCommand_Arg {
	if m != nil {
		return m.Arg
	}
	return nil
}

func (m *Command) GetGet() *FileGet {
	if x, ok := m.GetArg().(*Command_Get); ok {
		return x.Get
	}
	return nil
}

func (m *Command) GetStore() *FileStore {
	if x, ok := m.GetArg().(*Command_Store); ok {
		return x.Store
	}
	return nil
}

func (m *Command) GetDelete() *FileDelete {
	if x, ok := m.GetArg().(*Command_Delete); ok {
		return x.Delete
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Command) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Command_OneofMarshaler, _Command_OneofUnmarshaler, _Command_OneofSizer, []interface{}{
		(*Command_Get)(nil),
		(*Command_Store)(nil),
		(*Command_Delete)(nil),
	}
}

func _Command_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Command)
	// arg
	switch x := m.Arg.(type) {
	case *Command_Get:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Get); err != nil {
			return err
		}
	case *Command_Store:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Store); err != nil {
			return err
		}
	case *Command_Delete:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Delete); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Command.Arg has unexpected type %T", x)
	}
	return nil
}

func _Command_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Command)
	switch tag {
	case 2: // arg.get
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileGet)
		err := b.DecodeMessage(msg)
		m.Arg = &Command_Get{msg}
		return true, err
	case 3: // arg.store
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileStore)
		err := b.DecodeMessage(msg)
		m.Arg = &Command_Store{msg}
		return true, err
	case 4: // arg.delete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FileDelete)
		err := b.DecodeMessage(msg)
		m.Arg = &Command_Delete{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Command_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Command)
	// arg
	switch x := m.Arg.(type) {
	case *Command_Get:
		s := proto.Size(x.Get)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Store:
		s := proto.Size(x.Store)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Command_Delete:
		s := proto.Size(x.Delete)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// FingerEntry to be passed in piggy back messages
type FingerEntry struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FingerEntry) Reset()         { *m = FingerEntry{} }
func (m *FingerEntry) String() string { return proto.CompactTextString(m) }
func (*FingerEntry) ProtoMessage()    {}
func (*FingerEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{10}
}

func (m *FingerEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FingerEntry.Unmarshal(m, b)
}
func (m *FingerEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FingerEntry.Marshal(b, m, deterministic)
}
func (m *FingerEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FingerEntry.Merge(m, src)
}
func (m *FingerEntry) XXX_Size() int {
	return xxx_messageInfo_FingerEntry.Size(m)
}
func (m *FingerEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_FingerEntry.DiscardUnknown(m)
}

var xxx_messageInfo_FingerEntry proto.InternalMessageInfo

func (m *FingerEntry) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FingerEntry) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

// Input to FindSuccessor
type FindSuccessorArgs struct {
	Id                   uint64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Jumps                uint32         `protobuf:"varint,2,opt,name=jumps,proto3" json:"jumps,omitempty"`
	Fingers              []*FingerEntry `protobuf:"bytes,3,rep,name=fingers,proto3" json:"fingers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FindSuccessorArgs) Reset()         { *m = FindSuccessorArgs{} }
func (m *FindSuccessorArgs) String() string { return proto.CompactTextString(m) }
func (*FindSuccessorArgs) ProtoMessage()    {}
func (*FindSuccessorArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{11}
}

func (m *FindSuccessorArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSuccessorArgs.Unmarshal(m, b)
}
func (m *FindSuccessorArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSuccessorArgs.Marshal(b, m, deterministic)
}
func (m *FindSuccessorArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSuccessorArgs.Merge(m, src)
}
func (m *FindSuccessorArgs) XXX_Size() int {
	return xxx_messageInfo_FindSuccessorArgs.Size(m)
}
func (m *FindSuccessorArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSuccessorArgs.DiscardUnknown(m)
}

var xxx_messageInfo_FindSuccessorArgs proto.InternalMessageInfo

func (m *FindSuccessorArgs) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FindSuccessorArgs) GetJumps() uint32 {
	if m != nil {
		return m.Jumps
	}
	return 0
}

func (m *FindSuccessorArgs) GetFingers() []*FingerEntry {
	if m != nil {
		return m.Fingers
	}
	return nil
}

// Output from FindSuccessor
type FindSuccessorRet struct {
	SuccessorId          uint64   `protobuf:"varint,1,opt,name=successorId,proto3" json:"successorId,omitempty"`
	SuccessorIp          string   `protobuf:"bytes,2,opt,name=successorIp,proto3" json:"successorIp,omitempty"`
	Jumps                uint32   `protobuf:"varint,3,opt,name=jumps,proto3" json:"jumps,omitempty"`
	FinalDest            uint64   `protobuf:"varint,4,opt,name=finalDest,proto3" json:"finalDest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSuccessorRet) Reset()         { *m = FindSuccessorRet{} }
func (m *FindSuccessorRet) String() string { return proto.CompactTextString(m) }
func (*FindSuccessorRet) ProtoMessage()    {}
func (*FindSuccessorRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{12}
}

func (m *FindSuccessorRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSuccessorRet.Unmarshal(m, b)
}
func (m *FindSuccessorRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSuccessorRet.Marshal(b, m, deterministic)
}
func (m *FindSuccessorRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSuccessorRet.Merge(m, src)
}
func (m *FindSuccessorRet) XXX_Size() int {
	return xxx_messageInfo_FindSuccessorRet.Size(m)
}
func (m *FindSuccessorRet) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSuccessorRet.DiscardUnknown(m)
}

var xxx_messageInfo_FindSuccessorRet proto.InternalMessageInfo

func (m *FindSuccessorRet) GetSuccessorId() uint64 {
	if m != nil {
		return m.SuccessorId
	}
	return 0
}

func (m *FindSuccessorRet) GetSuccessorIp() string {
	if m != nil {
		return m.SuccessorIp
	}
	return ""
}

func (m *FindSuccessorRet) GetJumps() uint32 {
	if m != nil {
		return m.Jumps
	}
	return 0
}

func (m *FindSuccessorRet) GetFinalDest() uint64 {
	if m != nil {
		return m.FinalDest
	}
	return 0
}

// Input to Notify
type NotifyArgs struct {
	PredecessorId        uint64   `protobuf:"varint,1,opt,name=predecessorId,proto3" json:"predecessorId,omitempty"`
	PredecessorIp        string   `protobuf:"bytes,2,opt,name=predecessorIp,proto3" json:"predecessorIp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyArgs) Reset()         { *m = NotifyArgs{} }
func (m *NotifyArgs) String() string { return proto.CompactTextString(m) }
func (*NotifyArgs) ProtoMessage()    {}
func (*NotifyArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{13}
}

func (m *NotifyArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyArgs.Unmarshal(m, b)
}
func (m *NotifyArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyArgs.Marshal(b, m, deterministic)
}
func (m *NotifyArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyArgs.Merge(m, src)
}
func (m *NotifyArgs) XXX_Size() int {
	return xxx_messageInfo_NotifyArgs.Size(m)
}
func (m *NotifyArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyArgs.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyArgs proto.InternalMessageInfo

func (m *NotifyArgs) GetPredecessorId() uint64 {
	if m != nil {
		return m.PredecessorId
	}
	return 0
}

func (m *NotifyArgs) GetPredecessorIp() string {
	if m != nil {
		return m.PredecessorIp
	}
	return ""
}

//TODO: Notify may not require a response
// Output from Notify
type NotifyRet struct {
	Updated              bool     `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyRet) Reset()         { *m = NotifyRet{} }
func (m *NotifyRet) String() string { return proto.CompactTextString(m) }
func (*NotifyRet) ProtoMessage()    {}
func (*NotifyRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{14}
}

func (m *NotifyRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyRet.Unmarshal(m, b)
}
func (m *NotifyRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyRet.Marshal(b, m, deterministic)
}
func (m *NotifyRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyRet.Merge(m, src)
}
func (m *NotifyRet) XXX_Size() int {
	return xxx_messageInfo_NotifyRet.Size(m)
}
func (m *NotifyRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyRet.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyRet proto.InternalMessageInfo

func (m *NotifyRet) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

// Input to PingPredecessor
type PingPredecessorArgs struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingPredecessorArgs) Reset()         { *m = PingPredecessorArgs{} }
func (m *PingPredecessorArgs) String() string { return proto.CompactTextString(m) }
func (*PingPredecessorArgs) ProtoMessage()    {}
func (*PingPredecessorArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{15}
}

func (m *PingPredecessorArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingPredecessorArgs.Unmarshal(m, b)
}
func (m *PingPredecessorArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingPredecessorArgs.Marshal(b, m, deterministic)
}
func (m *PingPredecessorArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingPredecessorArgs.Merge(m, src)
}
func (m *PingPredecessorArgs) XXX_Size() int {
	return xxx_messageInfo_PingPredecessorArgs.Size(m)
}
func (m *PingPredecessorArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_PingPredecessorArgs.DiscardUnknown(m)
}

var xxx_messageInfo_PingPredecessorArgs proto.InternalMessageInfo

// Output from PingPredecessor
type PingPredecessorRet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingPredecessorRet) Reset()         { *m = PingPredecessorRet{} }
func (m *PingPredecessorRet) String() string { return proto.CompactTextString(m) }
func (*PingPredecessorRet) ProtoMessage()    {}
func (*PingPredecessorRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{16}
}

func (m *PingPredecessorRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingPredecessorRet.Unmarshal(m, b)
}
func (m *PingPredecessorRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingPredecessorRet.Marshal(b, m, deterministic)
}
func (m *PingPredecessorRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingPredecessorRet.Merge(m, src)
}
func (m *PingPredecessorRet) XXX_Size() int {
	return xxx_messageInfo_PingPredecessorRet.Size(m)
}
func (m *PingPredecessorRet) XXX_DiscardUnknown() {
	xxx_messageInfo_PingPredecessorRet.DiscardUnknown(m)
}

var xxx_messageInfo_PingPredecessorRet proto.InternalMessageInfo

// Input to PingSuccessor
type PingSuccessorArgs struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingSuccessorArgs) Reset()         { *m = PingSuccessorArgs{} }
func (m *PingSuccessorArgs) String() string { return proto.CompactTextString(m) }
func (*PingSuccessorArgs) ProtoMessage()    {}
func (*PingSuccessorArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{17}
}

func (m *PingSuccessorArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingSuccessorArgs.Unmarshal(m, b)
}
func (m *PingSuccessorArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingSuccessorArgs.Marshal(b, m, deterministic)
}
func (m *PingSuccessorArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingSuccessorArgs.Merge(m, src)
}
func (m *PingSuccessorArgs) XXX_Size() int {
	return xxx_messageInfo_PingSuccessorArgs.Size(m)
}
func (m *PingSuccessorArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_PingSuccessorArgs.DiscardUnknown(m)
}

var xxx_messageInfo_PingSuccessorArgs proto.InternalMessageInfo

// Output from PingSuccessor (successor's predecessor)
type PingSuccessorRet struct {
	PredecessorId        uint64   `protobuf:"varint,1,opt,name=predecessorId,proto3" json:"predecessorId,omitempty"`
	PredecessorIp        string   `protobuf:"bytes,2,opt,name=predecessorIp,proto3" json:"predecessorIp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingSuccessorRet) Reset()         { *m = PingSuccessorRet{} }
func (m *PingSuccessorRet) String() string { return proto.CompactTextString(m) }
func (*PingSuccessorRet) ProtoMessage()    {}
func (*PingSuccessorRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{18}
}

func (m *PingSuccessorRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingSuccessorRet.Unmarshal(m, b)
}
func (m *PingSuccessorRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingSuccessorRet.Marshal(b, m, deterministic)
}
func (m *PingSuccessorRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingSuccessorRet.Merge(m, src)
}
func (m *PingSuccessorRet) XXX_Size() int {
	return xxx_messageInfo_PingSuccessorRet.Size(m)
}
func (m *PingSuccessorRet) XXX_DiscardUnknown() {
	xxx_messageInfo_PingSuccessorRet.DiscardUnknown(m)
}

var xxx_messageInfo_PingSuccessorRet proto.InternalMessageInfo

func (m *PingSuccessorRet) GetPredecessorId() uint64 {
	if m != nil {
		return m.PredecessorId
	}
	return 0
}

func (m *PingSuccessorRet) GetPredecessorIp() string {
	if m != nil {
		return m.PredecessorIp
	}
	return ""
}

// Input to MoveFile
type MoveFileArgs struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveFileArgs) Reset()         { *m = MoveFileArgs{} }
func (m *MoveFileArgs) String() string { return proto.CompactTextString(m) }
func (*MoveFileArgs) ProtoMessage()    {}
func (*MoveFileArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{19}
}

func (m *MoveFileArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveFileArgs.Unmarshal(m, b)
}
func (m *MoveFileArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveFileArgs.Marshal(b, m, deterministic)
}
func (m *MoveFileArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveFileArgs.Merge(m, src)
}
func (m *MoveFileArgs) XXX_Size() int {
	return xxx_messageInfo_MoveFileArgs.Size(m)
}
func (m *MoveFileArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveFileArgs.DiscardUnknown(m)
}

var xxx_messageInfo_MoveFileArgs proto.InternalMessageInfo

func (m *MoveFileArgs) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MoveFileArgs) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// Output from MoveFile
type MoveFileRet struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveFileRet) Reset()         { *m = MoveFileRet{} }
func (m *MoveFileRet) String() string { return proto.CompactTextString(m) }
func (*MoveFileRet) ProtoMessage()    {}
func (*MoveFileRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{20}
}

func (m *MoveFileRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveFileRet.Unmarshal(m, b)
}
func (m *MoveFileRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveFileRet.Marshal(b, m, deterministic)
}
func (m *MoveFileRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveFileRet.Merge(m, src)
}
func (m *MoveFileRet) XXX_Size() int {
	return xxx_messageInfo_MoveFileRet.Size(m)
}
func (m *MoveFileRet) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveFileRet.DiscardUnknown(m)
}

var xxx_messageInfo_MoveFileRet proto.InternalMessageInfo

func (m *MoveFileRet) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterEnum("pb.Op", Op_name, Op_value)
	proto.RegisterType((*Data)(nil), "pb.Data")
	proto.RegisterType((*FileStore)(nil), "pb.FileStore")
	proto.RegisterType((*FileGet)(nil), "pb.FileGet")
	proto.RegisterType((*FileDelete)(nil), "pb.FileDelete")
	proto.RegisterType((*Success)(nil), "pb.Success")
	proto.RegisterType((*FileNotFound)(nil), "pb.FileNotFound")
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterType((*Redirect)(nil), "pb.Redirect")
	proto.RegisterType((*Result)(nil), "pb.Result")
	proto.RegisterType((*Command)(nil), "pb.Command")
	proto.RegisterType((*FingerEntry)(nil), "pb.FingerEntry")
	proto.RegisterType((*FindSuccessorArgs)(nil), "pb.FindSuccessorArgs")
	proto.RegisterType((*FindSuccessorRet)(nil), "pb.FindSuccessorRet")
	proto.RegisterType((*NotifyArgs)(nil), "pb.NotifyArgs")
	proto.RegisterType((*NotifyRet)(nil), "pb.NotifyRet")
	proto.RegisterType((*PingPredecessorArgs)(nil), "pb.PingPredecessorArgs")
	proto.RegisterType((*PingPredecessorRet)(nil), "pb.PingPredecessorRet")
	proto.RegisterType((*PingSuccessorArgs)(nil), "pb.PingSuccessorArgs")
	proto.RegisterType((*PingSuccessorRet)(nil), "pb.PingSuccessorRet")
	proto.RegisterType((*MoveFileArgs)(nil), "pb.MoveFileArgs")
	proto.RegisterType((*MoveFileRet)(nil), "pb.MoveFileRet")
}

func init() { proto.RegisterFile("fs.proto", fileDescriptor_e604833c2b457e38) }

var fileDescriptor_e604833c2b457e38 = []byte{
	// 768 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0xea, 0x46,
	0x10, 0x36, 0x36, 0x18, 0x3c, 0x04, 0x42, 0x36, 0x3f, 0xa5, 0x28, 0x6d, 0xd1, 0x8a, 0x34, 0x34,
	0x6a, 0xb9, 0xa0, 0x52, 0xef, 0x7a, 0x91, 0xf0, 0x13, 0x2a, 0xb5, 0x09, 0x5a, 0x72, 0xd1, 0xab,
	0x4a, 0x4e, 0xbc, 0x50, 0x57, 0x60, 0x5b, 0xeb, 0x25, 0x52, 0xa4, 0x3e, 0xc1, 0x79, 0x92, 0xf3,
	0x06, 0xe7, 0x3c, 0xde, 0xd1, 0xfe, 0x05, 0xdb, 0x70, 0x79, 0xee, 0x3c, 0x33, 0xdf, 0xcc, 0x7c,
	0xb3, 0xf3, 0x63, 0xa8, 0x2d, 0xd3, 0x41, 0xc2, 0x62, 0x1e, 0x23, 0x3b, 0x79, 0xc6, 0x1d, 0x28,
	0x8f, 0x7d, 0xee, 0x23, 0x04, 0xe5, 0xc0, 0xe7, 0x7e, 0xbb, 0xd4, 0x2d, 0xf5, 0x3d, 0x22, 0xbf,
	0xf1, 0xef, 0xe0, 0x4d, 0xc3, 0x35, 0x5d, 0xf0, 0x98, 0x51, 0x01, 0x88, 0xfc, 0x0d, 0x35, 0x00,
	0xf1, 0x8d, 0x2e, 0xb5, 0x93, 0xdd, 0x2d, 0xf5, 0xeb, 0xc3, 0xda, 0x20, 0x79, 0x1e, 0x88, 0x60,
	0xda, 0xfd, 0x3b, 0xa8, 0x0a, 0xf7, 0x7b, 0xca, 0x0f, 0x39, 0xe3, 0x2e, 0x80, 0x30, 0x8f, 0xe9,
	0x9a, 0xf2, 0x83, 0xe1, 0xb1, 0x07, 0xd5, 0xc5, 0xf6, 0xe5, 0x85, 0xa6, 0x29, 0x6e, 0xc2, 0x91,
	0x00, 0x3f, 0xc4, 0x7c, 0x1a, 0x6f, 0xa3, 0x00, 0x7f, 0x0b, 0x95, 0x09, 0x63, 0x31, 0x43, 0x2d,
	0x70, 0x36, 0xe9, 0x4a, 0xbb, 0x89, 0x4f, 0x8c, 0xa1, 0x46, 0x68, 0x10, 0x32, 0xfa, 0xc2, 0xd1,
	0x05, 0xb8, 0x29, 0x65, 0xaf, 0x94, 0x69, 0x80, 0x96, 0xf0, 0xa7, 0x12, 0xb8, 0x84, 0xa6, 0xdb,
	0x35, 0x47, 0xdf, 0x67, 0x0a, 0xcf, 0xd4, 0x30, 0xb3, 0x54, 0x15, 0xe8, 0x1a, 0xaa, 0xa9, 0x22,
	0xa1, 0xcb, 0xac, 0x0b, 0x88, 0xe6, 0x35, 0xb3, 0x88, 0xb1, 0xa2, 0x01, 0xd4, 0x22, 0x4d, 0xaf,
	0xed, 0x48, 0x64, 0x4b, 0x20, 0xb3, 0xb4, 0x67, 0x16, 0x79, 0xc7, 0xa0, 0x1b, 0xa8, 0x31, 0xcd,
	0xb3, 0x5d, 0x96, 0xf8, 0x23, 0x81, 0x37, 0xdc, 0x05, 0xd6, 0xd8, 0xef, 0x6a, 0xe0, 0x32, 0x49,
	0x17, 0x7f, 0x2c, 0x41, 0x75, 0x14, 0x6f, 0x36, 0x7e, 0x14, 0xa0, 0x1e, 0x78, 0x71, 0x42, 0x99,
	0xcf, 0xc3, 0x38, 0x92, 0xfc, 0x9b, 0x43, 0x57, 0x84, 0x78, 0x4c, 0xc8, 0xce, 0x80, 0x7e, 0x00,
	0x67, 0x45, 0x79, 0x96, 0xbc, 0xee, 0xca, 0xcc, 0x22, 0xc2, 0x82, 0xae, 0xa0, 0x92, 0x8a, 0x16,
	0x6b, 0xd6, 0x0d, 0x03, 0x91, 0x7d, 0x9f, 0x59, 0x44, 0x59, 0x51, 0x1f, 0xdc, 0x40, 0xf6, 0x4a,
	0xb3, 0x6d, 0x1a, 0x9c, 0xea, 0xe0, 0xcc, 0x22, 0xda, 0x7e, 0x57, 0x01, 0xc7, 0x67, 0x2b, 0xfc,
	0x0b, 0xd4, 0xa7, 0x61, 0xb4, 0xa2, 0x6c, 0x12, 0x71, 0xf6, 0x86, 0x9a, 0x60, 0x87, 0x81, 0xa4,
	0x59, 0x26, 0x76, 0x18, 0x48, 0x39, 0x91, 0xb4, 0x3c, 0x62, 0x87, 0x09, 0x0e, 0xe0, 0x64, 0x1a,
	0x46, 0x81, 0x7e, 0xd9, 0x98, 0xdd, 0xb2, 0x55, 0xba, 0xe7, 0x74, 0x06, 0x95, 0xff, 0xb6, 0x9b,
	0x44, 0xf5, 0xa2, 0x41, 0x94, 0x80, 0x7e, 0x82, 0xea, 0x52, 0x66, 0x4a, 0xdb, 0x4e, 0xd7, 0xe9,
	0xd7, 0x87, 0xc7, 0x8a, 0xdb, 0x7b, 0x72, 0x62, 0xec, 0xf8, 0x43, 0x09, 0x5a, 0xb9, 0x34, 0x84,
	0x72, 0xd4, 0x85, 0x7a, 0x6a, 0xe4, 0x3f, 0x4c, 0xba, 0xac, 0x2a, 0x8f, 0x30, 0xac, 0xb3, 0xaa,
	0x1d, 0x33, 0x27, 0xcb, 0xec, 0x12, 0xbc, 0x65, 0x18, 0xf9, 0xeb, 0x31, 0x4d, 0x55, 0x97, 0xcb,
	0x64, 0xa7, 0xc0, 0x7f, 0x03, 0x3c, 0xc4, 0x3c, 0x5c, 0xbe, 0xc9, 0x5a, 0x7b, 0xd0, 0x48, 0x18,
	0x0d, 0x68, 0x81, 0x47, 0x5e, 0x59, 0x44, 0x19, 0x2e, 0x79, 0x25, 0xbe, 0x02, 0x4f, 0x45, 0x16,
	0xe5, 0xb5, 0xa1, 0xba, 0x4d, 0x02, 0x9f, 0x53, 0x15, 0xb2, 0x46, 0x8c, 0x88, 0xcf, 0xe1, 0x74,
	0x1e, 0x46, 0xab, 0xf9, 0xce, 0x57, 0x30, 0xc1, 0x67, 0x80, 0x0a, 0x6a, 0x42, 0x39, 0x3e, 0x85,
	0x13, 0xa1, 0xcd, 0x35, 0x08, 0xff, 0x03, 0xad, 0x9c, 0x52, 0xe4, 0xfb, 0x9a, 0x85, 0xfc, 0x06,
	0x47, 0x7f, 0xc5, 0xaf, 0x54, 0xcc, 0x99, 0x7c, 0xa4, 0x43, 0x67, 0x08, 0x65, 0xce, 0x90, 0xb9,
	0x5d, 0xd7, 0x50, 0x37, 0x7e, 0xfa, 0x09, 0xcc, 0x16, 0xeb, 0x27, 0xd0, 0xe2, 0x4d, 0x0f, 0xec,
	0xc7, 0x04, 0x55, 0xc1, 0xb9, 0x9f, 0x3c, 0xb5, 0x2c, 0xe4, 0x41, 0x65, 0xf1, 0xf4, 0x48, 0x26,
	0xad, 0x12, 0x02, 0x70, 0xc7, 0x93, 0x3f, 0x27, 0x4f, 0x93, 0x96, 0x3d, 0xfc, 0x5f, 0x1d, 0xab,
	0xc5, 0x5b, 0xca, 0xe9, 0x06, 0x75, 0xc1, 0x11, 0x57, 0x2d, 0xbb, 0x4c, 0x1d, 0x50, 0xcb, 0x2b,
	0x97, 0xd4, 0x42, 0x3d, 0xa8, 0xa8, 0xb3, 0x99, 0xdf, 0xa6, 0x02, 0xea, 0x47, 0x70, 0xf5, 0xf9,
	0x2b, 0x2c, 0x53, 0x1e, 0x37, 0xfc, 0x6c, 0x43, 0x65, 0xf4, 0x6f, 0xcc, 0x02, 0x74, 0x5b, 0x9c,
	0xde, 0xf9, 0x08, 0x9d, 0xeb, 0x61, 0xcf, 0xaf, 0x4e, 0xe7, 0x6c, 0x4f, 0x2d, 0x9a, 0x68, 0xa1,
	0x9f, 0xdf, 0x47, 0x63, 0x3e, 0x52, 0x79, 0x77, 0x33, 0xd8, 0x69, 0xec, 0x64, 0x85, 0xbe, 0xdf,
	0x1f, 0x85, 0xf9, 0x08, 0x7d, 0x23, 0x60, 0x07, 0x26, 0xa7, 0x73, 0x71, 0xc0, 0xa0, 0x02, 0xdd,
	0x16, 0x07, 0xc5, 0x30, 0xdf, 0x9b, 0x29, 0xc5, 0xbc, 0x38, 0x55, 0xd8, 0x42, 0xc3, 0x4c, 0x4f,
	0xe7, 0x23, 0x24, 0xcf, 0x6b, 0x76, 0x38, 0x3a, 0xc7, 0x59, 0x8d, 0xf4, 0x79, 0x76, 0xe5, 0xaf,
	0xee, 0xd7, 0x2f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x63, 0x5f, 0x63, 0x57, 0xf6, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileSystemClient is the client API for FileSystem service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileSystemClient interface {
	// Get the value associated with a key.
	Get(ctx context.Context, in *FileGet, opts ...grpc.CallOption) (*Result, error)
	Store(ctx context.Context, in *FileStore, opts ...grpc.CallOption) (*Result, error)
	Delete(ctx context.Context, in *FileDelete, opts ...grpc.CallOption) (*Result, error)
}

type fileSystemClient struct {
	cc *grpc.ClientConn
}

func NewFileSystemClient(cc *grpc.ClientConn) FileSystemClient {
	return &fileSystemClient{cc}
}

func (c *fileSystemClient) Get(ctx context.Context, in *FileGet, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.FileSystem/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemClient) Store(ctx context.Context, in *FileStore, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.FileSystem/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemClient) Delete(ctx context.Context, in *FileDelete, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.FileSystem/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileSystemServer is the server API for FileSystem service.
type FileSystemServer interface {
	// Get the value associated with a key.
	Get(context.Context, *FileGet) (*Result, error)
	Store(context.Context, *FileStore) (*Result, error)
	Delete(context.Context, *FileDelete) (*Result, error)
}

func RegisterFileSystemServer(s *grpc.Server, srv FileSystemServer) {
	s.RegisterService(&_FileSystem_serviceDesc, srv)
}

func _FileSystem_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileSystem/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemServer).Get(ctx, req.(*FileGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystem_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileStore)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileSystem/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemServer).Store(ctx, req.(*FileStore))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystem_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileSystem/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemServer).Delete(ctx, req.(*FileDelete))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileSystem_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.FileSystem",
	HandlerType: (*FileSystemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _FileSystem_Get_Handler,
		},
		{
			MethodName: "Store",
			Handler:    _FileSystem_Store_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _FileSystem_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fs.proto",
}

// ChordClient is the client API for Chord service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChordClient interface {
	FindSuccessorRPC(ctx context.Context, in *FindSuccessorArgs, opts ...grpc.CallOption) (*FindSuccessorRet, error)
	NotifyRPC(ctx context.Context, in *NotifyArgs, opts ...grpc.CallOption) (*NotifyRet, error)
	PingPredecessorRPC(ctx context.Context, in *PingPredecessorArgs, opts ...grpc.CallOption) (*PingPredecessorRet, error)
	PingSuccessorRPC(ctx context.Context, in *PingSuccessorArgs, opts ...grpc.CallOption) (*PingSuccessorRet, error)
	MoveFileRPC(ctx context.Context, in *MoveFileArgs, opts ...grpc.CallOption) (*MoveFileRet, error)
}

type chordClient struct {
	cc *grpc.ClientConn
}

func NewChordClient(cc *grpc.ClientConn) ChordClient {
	return &chordClient{cc}
}

func (c *chordClient) FindSuccessorRPC(ctx context.Context, in *FindSuccessorArgs, opts ...grpc.CallOption) (*FindSuccessorRet, error) {
	out := new(FindSuccessorRet)
	err := c.cc.Invoke(ctx, "/pb.Chord/FindSuccessorRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) NotifyRPC(ctx context.Context, in *NotifyArgs, opts ...grpc.CallOption) (*NotifyRet, error) {
	out := new(NotifyRet)
	err := c.cc.Invoke(ctx, "/pb.Chord/NotifyRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) PingPredecessorRPC(ctx context.Context, in *PingPredecessorArgs, opts ...grpc.CallOption) (*PingPredecessorRet, error) {
	out := new(PingPredecessorRet)
	err := c.cc.Invoke(ctx, "/pb.Chord/PingPredecessorRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) PingSuccessorRPC(ctx context.Context, in *PingSuccessorArgs, opts ...grpc.CallOption) (*PingSuccessorRet, error) {
	out := new(PingSuccessorRet)
	err := c.cc.Invoke(ctx, "/pb.Chord/PingSuccessorRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) MoveFileRPC(ctx context.Context, in *MoveFileArgs, opts ...grpc.CallOption) (*MoveFileRet, error) {
	out := new(MoveFileRet)
	err := c.cc.Invoke(ctx, "/pb.Chord/MoveFileRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChordServer is the server API for Chord service.
type ChordServer interface {
	FindSuccessorRPC(context.Context, *FindSuccessorArgs) (*FindSuccessorRet, error)
	NotifyRPC(context.Context, *NotifyArgs) (*NotifyRet, error)
	PingPredecessorRPC(context.Context, *PingPredecessorArgs) (*PingPredecessorRet, error)
	PingSuccessorRPC(context.Context, *PingSuccessorArgs) (*PingSuccessorRet, error)
	MoveFileRPC(context.Context, *MoveFileArgs) (*MoveFileRet, error)
}

func RegisterChordServer(s *grpc.Server, srv ChordServer) {
	s.RegisterService(&_Chord_serviceDesc, srv)
}

func _Chord_FindSuccessorRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSuccessorArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).FindSuccessorRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Chord/FindSuccessorRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).FindSuccessorRPC(ctx, req.(*FindSuccessorArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_NotifyRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).NotifyRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Chord/NotifyRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).NotifyRPC(ctx, req.(*NotifyArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_PingPredecessorRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingPredecessorArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).PingPredecessorRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Chord/PingPredecessorRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).PingPredecessorRPC(ctx, req.(*PingPredecessorArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_PingSuccessorRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingSuccessorArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).PingSuccessorRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Chord/PingSuccessorRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).PingSuccessorRPC(ctx, req.(*PingSuccessorArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_MoveFileRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveFileArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).MoveFileRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Chord/MoveFileRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).MoveFileRPC(ctx, req.(*MoveFileArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chord_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Chord",
	HandlerType: (*ChordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindSuccessorRPC",
			Handler:    _Chord_FindSuccessorRPC_Handler,
		},
		{
			MethodName: "NotifyRPC",
			Handler:    _Chord_NotifyRPC_Handler,
		},
		{
			MethodName: "PingPredecessorRPC",
			Handler:    _Chord_PingPredecessorRPC_Handler,
		},
		{
			MethodName: "PingSuccessorRPC",
			Handler:    _Chord_PingSuccessorRPC_Handler,
		},
		{
			MethodName: "MoveFileRPC",
			Handler:    _Chord_MoveFileRPC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fs.proto",
}
